<?php
/**
 * ObjectWriteableTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Pipeless
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Pipeless
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Pipeless;

use PHPUnit\Framework\TestCase;

/**
 * ObjectWriteableTest Class Doc Comment
 *
 * @category    Class
 * @description An object to be written to your data. Only one object can exist for each type + id combo. If any of your write patterns provide an object that doesn&#39;t exist, it will be created. If the object already exists, the existing object will be used in your write operation, and if created_on or modified_on differ from the values already associated with the object, those values will be updated.
 * @package     Pipeless
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ObjectWriteableTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ObjectWriteable"
     */
    public function testObjectWriteable()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "created_on"
     */
    public function testPropertyCreatedOn()
    {
    }

    /**
     * Test attribute "modified_on"
     */
    public function testPropertyModifiedOn()
    {
    }
}
